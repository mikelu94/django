version: '3'
services:
  app:
    build: .
    container_name: app
    command: python manage.py runserver 0:8000
    environment:
      - DJANGO_SETTINGS_MODULE=project.settings.dev
      - POSTGRES_DJANGO_DB=django
      - POSTGRES_DJANGO_USER=django
      - POSTGRES_DJANGO_PASSWORD=password
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
      - OKTA_DOMAIN=${OKTA_DOMAIN}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
    depends_on:
      - db
      - kv
      - mq
      - logging
    ports:
      - '8000:8000'
    tty: true
    volumes:
      - ./:/app
  celery:
    build: .
    container_name: 'celery_worker'
    command: celery -A project worker -l info
    environment:
      - DJANGO_SETTINGS_MODULE=project.settings.dev
      - POSTGRES_DJANGO_DB=django
      - POSTGRES_DJANGO_USER=django
      - POSTGRES_DJANGO_PASSWORD=password
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
      - OKTA_DOMAIN=${OKTA_DOMAIN}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
    depends_on:
      - app
    volumes:
      - ./:/app
  db:
    container_name: postgres
    image: postgres
    environment:
      - POSTGRES_DB=django
      - POSTGRES_USER=django
      - POSTGRES_PASSWORD=password
    volumes:
      - db_data:/var/lib/postgresql/data
  kv:
    container_name: redis
    image: redis
    volumes:
      - kv_data:/data
  mq:
    container_name: rabbitmq
    image: rabbitmq
    volumes:
      - mq_data:/var/lib/rabbitmq
  logging:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash:8.1.2
    environment:
      - XPACK_MONITORING_ENABLED=false
    volumes:
      - './etc/logstash.conf:/usr/share/logstash/pipeline/logstash.conf'
volumes:
  db_data:
  kv_data:
  mq_data:
