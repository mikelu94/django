version: '3'
services:
  app:
    container_name: 'django'
    command: python manage.py runserver 0:8000
    build: .
    depends_on:
      - db
      - cache
      - kv
      - mq
      - logging
      - bus
    ports:
      - '8000:8000'
    tty: true
    volumes:
      - ./:/usr/src/app
  celery:
    container_name: 'celery_worker'
    command: celery -A project worker -l info
    build: .
    depends_on:
      - app
    volumes:
      - ./:/usr/src/app
  bus_consumer:
    container_name: 'kafka_consumer'
    command: python manage.py kafka_consume
    build: .
    depends_on:
      - app
    volumes:
      - ./:/usr/src/app
  db:
    container_name: 'postgres'
    image: postgres
    environment:
      - POSTGRES_DB=django
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    ports:
      - '5432:5432'
    volumes:
      - db_data:/var/lib/postgresql/data
  cache:
    container_name: memcached
    image: memcached
    ports:
      - '11211:11211'
  kv:
    container_name: 'redis'
    image: redis
    ports:
      - '6379:6379'
    volumes:
      - kv_data:/data
  mq:
    container_name: 'rabbitmq'
    image: rabbitmq:management
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - mq_data:/var/lib/rabbitmq
  logging:
    container_name: 'logstash'
    image: docker.elastic.co/logstash/logstash:7.11.2
    ports:
      - '5959:5959'
    volumes:
      - './etc/logstash.conf:/usr/share/logstash/pipeline/logstash.conf'
  controller:
    container_name: zookeeper
    image: zookeeper
    ports:
      - '2181:2181'
  bus:
    container_name: kafka
    image: confluentinc/cp-kafka
    depends_on:
      - controller
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    ports:
      - '9092:9092'
volumes:
  db_data:
  kv_data:
  mq_data:
